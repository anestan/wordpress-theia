{"version":3,"sources":["webpack://theia-tailwind/./node_modules/@googlemaps/js-api-loader/dist/index.esm.js","webpack://theia-tailwind/webpack/bootstrap","webpack://theia-tailwind/webpack/runtime/define property getters","webpack://theia-tailwind/webpack/runtime/hasOwnProperty shorthand","webpack://theia-tailwind/webpack/runtime/make namespace object","webpack://theia-tailwind/./resources/js/google-maps.js"],"names":["Loader","apiKey","window","google_maps_script_data","google_maps_api_key","version","libraries","load","then","coordinates","lat","lng","map","google","maps","Map","document","getElementById","center","zoom","disableDefaultUI","styles","Marker","position","icon","e","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;;AAEA,oBAAoB,WAAW;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA,iBAAiB,oKAAoK;AACrL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,6BAA6B,OAAO,wCAAwC;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,MAAM;AAChF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE8B;AAC9B;;;;;;;UCzRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA,IAAIA,6DAAJ,CAAW;AACTC,QAAM,EAAEC,MAAM,CAACC,uBAAP,CAA+BC,mBAD9B;AAETC,SAAO,EAAE,QAFA;AAGTC,WAAS,EAAE,CAAC,QAAD;AAHF,CAAX,EAIGC,IAJH,GAIUC,IAJV,CAIe,YAAM;AACnB,MAAIC,WAAW,GAAG;AAACC,OAAG,EAAE,CAAC,UAAP;AAAmBC,OAAG,EAAE;AAAxB,GAAlB;AAEA,MAAIC,GAAG,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AAC5DC,UAAM,EAAET,WADoD;AAE5DU,QAAI,EAAE,EAFsD;AAG5DC,oBAAgB,EAAE,IAH0C;AAI5DC,UAAM,EAAE,CACN;AACE,qBAAe,gBADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc;AADhB,OADS;AAHb,KADM,EAUN;AACE,qBAAe,yBADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc;AADhB,OADS;AAHb,KAVM,EAmBN;AACE,qBAAe,WADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc,CAAC;AADjB,OADS,EAIT;AACE,qBAAa;AADf,OAJS,EAOT;AACE,sBAAc;AADhB,OAPS;AAHb,KAnBM,EAkCN;AACE,qBAAe,KADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc,CAAC;AADjB,OADS,EAIT;AACE,qBAAa;AADf,OAJS,EAOT;AACE,sBAAc;AADhB,OAPS;AAHb,KAlCM,EAiDN;AACE,qBAAe,MADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc;AADhB,OADS;AAHb,KAjDM,EA0DN;AACE,qBAAe,cADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc;AADhB,OADS;AAHb,KA1DM,EAmEN;AACE,qBAAe,eADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,qBAAa;AADf,OADS;AAHb,KAnEM,EA4EN;AACE,qBAAe,YADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,qBAAa;AADf,OADS;AAHb,KA5EM,EAqFN;AACE,qBAAe,SADjB;AAEE,qBAAe,KAFjB;AAGE,iBAAW,CACT;AACE,sBAAc,CAAC;AADjB,OADS,EAIT;AACE,sBAAc;AADhB,OAJS;AAHb,KArFM,EAiGN;AACE,qBAAe,OADjB;AAEE,qBAAe,UAFjB;AAGE,iBAAW,CACT;AACE,eAAO;AADT,OADS,EAIT;AACE,qBAAa,CAAC;AADhB,OAJS,EAOT;AACE,sBAAc,CAAC;AADjB,OAPS;AAHb,KAjGM,EAgHN;AACE,qBAAe,OADjB;AAEE,qBAAe,QAFjB;AAGE,iBAAW,CACT;AACE,qBAAa,CAAC;AADhB,OADS,EAIT;AACE,sBAAc,CAAC;AADjB,OAJS;AAHb,KAhHM;AAJoD,GAApD,CAAV;AAmIA,MAAIR,MAAM,CAACC,IAAP,CAAYQ,MAAhB,CAAuB;AACrBC,YAAQ,EAAEd,WADW;AAErBG,OAAG,EAAHA,GAFqB;AAGrBY,QAAI,EAAE;AAHe,GAAvB;AAKD,CA/ID,WA+IS,UAAAC,CAAC,EAAI;AACZC,SAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,CAjJD,E","file":"/public/js/google-maps.js","sourcesContent":["// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ID = \"__googleMapsScriptId\";\r\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then(() => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\r\nclass Loader {\r\n    /**\r\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n     * using this library, instead the defaults are set by the Google Maps\r\n     * JavaScript API server.\r\n     *\r\n     * ```\r\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n     * ```\r\n     */\r\n    constructor({ apiKey, channel, client, id = DEFAULT_ID, libraries = [], language, region, version, mapIds, nonce, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", }) {\r\n        this.CALLBACK = \"__googleMapsCallback\";\r\n        this.callbacks = [];\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.version = version;\r\n        this.apiKey = apiKey;\r\n        this.channel = channel;\r\n        this.client = client;\r\n        this.id = id || DEFAULT_ID; // Do not allow empty string\r\n        this.libraries = libraries;\r\n        this.language = language;\r\n        this.region = region;\r\n        this.mapIds = mapIds;\r\n        this.nonce = nonce;\r\n        this.retries = retries;\r\n        this.url = url;\r\n        if (Loader.instance) {\r\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\r\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\r\n            }\r\n            return Loader.instance;\r\n        }\r\n        Loader.instance = this;\r\n    }\r\n    get options() {\r\n        return {\r\n            version: this.version,\r\n            apiKey: this.apiKey,\r\n            channel: this.channel,\r\n            client: this.client,\r\n            id: this.id,\r\n            libraries: this.libraries,\r\n            language: this.language,\r\n            region: this.region,\r\n            mapIds: this.mapIds,\r\n            nonce: this.nonce,\r\n            url: this.url,\r\n        };\r\n    }\r\n    /**\r\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n     *\r\n     * @ignore\r\n     */\r\n    createUrl() {\r\n        let url = this.url;\r\n        url += `?callback=${this.CALLBACK}`;\r\n        if (this.apiKey) {\r\n            url += `&key=${this.apiKey}`;\r\n        }\r\n        if (this.channel) {\r\n            url += `&channel=${this.channel}`;\r\n        }\r\n        if (this.client) {\r\n            url += `&client=${this.client}`;\r\n        }\r\n        if (this.libraries.length > 0) {\r\n            url += `&libraries=${this.libraries.join(\",\")}`;\r\n        }\r\n        if (this.language) {\r\n            url += `&language=${this.language}`;\r\n        }\r\n        if (this.region) {\r\n            url += `&region=${this.region}`;\r\n        }\r\n        if (this.version) {\r\n            url += `&v=${this.version}`;\r\n        }\r\n        if (this.mapIds) {\r\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     */\r\n    load() {\r\n        return this.loadPromise();\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     *\r\n     * @ignore\r\n     */\r\n    loadPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadCallback((err) => {\r\n                if (!err) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script with a callback.\r\n     */\r\n    loadCallback(fn) {\r\n        this.callbacks.push(fn);\r\n        this.execute();\r\n    }\r\n    /**\r\n     * Set the script on document.\r\n     */\r\n    setScript() {\r\n        if (document.getElementById(this.id)) {\r\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\r\n            this.callback();\r\n            return;\r\n        }\r\n        const url = this.createUrl();\r\n        const script = document.createElement(\"script\");\r\n        script.id = this.id;\r\n        script.type = \"text/javascript\";\r\n        script.src = url;\r\n        script.onerror = this.loadErrorCallback.bind(this);\r\n        script.defer = true;\r\n        script.async = true;\r\n        if (this.nonce) {\r\n            script.nonce = this.nonce;\r\n        }\r\n        document.head.appendChild(script);\r\n    }\r\n    deleteScript() {\r\n        const script = document.getElementById(this.id);\r\n        if (script) {\r\n            script.remove();\r\n        }\r\n    }\r\n    resetIfRetryingFailed() {\r\n        const possibleAttempts = this.retries + 1;\r\n        if (this.done && !this.loading && this.errors.length >= possibleAttempts) {\r\n            this.deleteScript();\r\n            this.done = false;\r\n            this.loading = false;\r\n            this.errors = [];\r\n            this.onerrorEvent = null;\r\n        }\r\n    }\r\n    loadErrorCallback(e) {\r\n        this.errors.push(e);\r\n        if (this.errors.length <= this.retries) {\r\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\r\n            console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\r\n            setTimeout(() => {\r\n                this.deleteScript();\r\n                this.setScript();\r\n            }, delay);\r\n        }\r\n        else {\r\n            this.onerrorEvent = e;\r\n            this.callback();\r\n        }\r\n    }\r\n    setCallback() {\r\n        window.__googleMapsCallback = this.callback.bind(this);\r\n    }\r\n    callback() {\r\n        this.done = true;\r\n        this.loading = false;\r\n        this.callbacks.forEach((cb) => {\r\n            cb(this.onerrorEvent);\r\n        });\r\n        this.callbacks = [];\r\n    }\r\n    execute() {\r\n        if (window.google && window.google.maps && window.google.maps.version) {\r\n            console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\r\n                \"This may result in undesirable behavior as options and script parameters may not match.\");\r\n            this.callback();\r\n        }\r\n        this.resetIfRetryingFailed();\r\n        if (this.done) {\r\n            this.callback();\r\n        }\r\n        else {\r\n            if (this.loading) ;\r\n            else {\r\n                this.loading = true;\r\n                this.setCallback();\r\n                this.setScript();\r\n            }\r\n        }\r\n    }\r\n}\n\nexport { DEFAULT_ID, Loader };\n//# sourceMappingURL=index.esm.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Google Maps\r\n */\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nnew Loader({\r\n  apiKey: window.google_maps_script_data.google_maps_api_key,\r\n  version: 'weekly',\r\n  libraries: ['places']\r\n}).load().then(() => {\r\n  let coordinates = {lat: -36.9063145, lng: 174.6874676};\r\n\r\n  let map = new google.maps.Map(document.getElementById('map'), {\r\n    center: coordinates,\r\n    zoom: 18,\r\n    disableDefaultUI: true,\r\n    styles: [\r\n      {\r\n        'featureType': 'administrative',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'saturation': '-100'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'administrative.province',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'visibility': 'off'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'landscape',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'saturation': -100\r\n          },\r\n          {\r\n            'lightness': 65\r\n          },\r\n          {\r\n            'visibility': 'on'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'poi',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'saturation': -100\r\n          },\r\n          {\r\n            'lightness': '50'\r\n          },\r\n          {\r\n            'visibility': 'simplified'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'road',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'saturation': '-100'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'road.highway',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'visibility': 'simplified'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'road.arterial',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'lightness': '30'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'road.local',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'lightness': '40'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'transit',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n          {\r\n            'saturation': -100\r\n          },\r\n          {\r\n            'visibility': 'simplified'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'water',\r\n        'elementType': 'geometry',\r\n        'stylers': [\r\n          {\r\n            'hue': '#ffff00'\r\n          },\r\n          {\r\n            'lightness': -25\r\n          },\r\n          {\r\n            'saturation': -97\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'featureType': 'water',\r\n        'elementType': 'labels',\r\n        'stylers': [\r\n          {\r\n            'lightness': -25\r\n          },\r\n          {\r\n            'saturation': -100\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  });\r\n\r\n  new google.maps.Marker({\r\n    position: coordinates,\r\n    map,\r\n    icon: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/parking_lot_maps.png',\r\n  });\r\n}).catch(e => {\r\n  console.log(e);\r\n});\r\n"],"sourceRoot":""}